"use client";
import { useState } from "react";
import { Button } from "@/components/ui/button";

const theory = {
  name: "–ó–Ω–∞–∫ STOP (2.5)",
  type: "–ó–Ω–∞–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞",
  view: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞",
  description:
    "–¢—Ä–µ–±—É–µ—Ç –ø–æ–ª–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–¥ –ª–∏–Ω–∏–µ–π STOP –∏–ª–∏ –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–æ–º. –î–≤–∏–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —É–±–µ–¥–∏–≤—à–∏—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
};

const pitfalls = [
  "üö´ –ú–Ω–æ–≥–∏–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é, —á—Ç–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º.",
  "üö´ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞ —Å—Ç–æ–ø-–ª–∏–Ω–∏–µ–π ‚Äî —Ç–æ–∂–µ –æ—à–∏–±–∫–∞.",
  "‚ö†Ô∏è –ù–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞—Ö –∑–Ω–∞–∫ STOP –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è —Å–≤–µ—Ç–æ—Ñ–æ—Ä–æ–º ‚Äî –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –ø—Ä–∏ —Ä–∞–±–æ—Ç–∞—é—â–µ–º —Å–≤–µ—Ç–æ—Ñ–æ—Ä–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ–º—Å—è –Ω–∞ –Ω–µ–≥–æ.",
];

const locations = [
  "–ù–∞ –Ω–µ—Ä–µ–≥—É–ª–∏—Ä—É–µ–º—ã—Ö –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞—Ö —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –≤–∏–¥–∏–º–æ—Å—Ç—å—é",
  "–ù–∞ –≤—ã–µ–∑–¥–∞—Ö —Å–æ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã—Ö –¥–æ—Ä–æ–≥",
  "–ù–∞ —É—á–∞—Å—Ç–∫–∞—Ö —Å –≤—ã—Å–æ–∫–æ–π –∞–≤–∞—Ä–∏–π–Ω–æ—Å—Ç—å—é",
];

const driverActions = [
  "–ó–∞–º–µ–¥–ª–∏—Ç—å—Å—è –∑–∞—Ä–∞–Ω–µ–µ",
  "–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ø–µ—Ä–µ–¥ —Å—Ç–æ–ø-–ª–∏–Ω–∏–µ–π",
  "–û—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã",
  "–î–≤–∏–≥–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
];

const quiz = [
  {
    question: "–ß—Ç–æ –¥–æ–ª–∂–µ–Ω —Å–¥–µ–ª–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–∏ –≤–∏–¥–µ –∑–Ω–∞–∫–∞ STOP, –µ—Å–ª–∏ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö –º–∞—à–∏–Ω?",
    options: [
      "–ó–∞–º–µ–¥–ª–∏—Ç—å—Å—è –∏ –ø—Ä–æ–µ—Ö–∞—Ç—å",
      "–ü—Ä–∏—Ç–æ—Ä–º–æ–∑–∏—Ç—å –∏ –ø—Ä–æ–µ—Ö–∞—Ç—å, –µ—Å–ª–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç",
      "–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –ø—Ä–æ–µ—Ö–∞—Ç—å",
    ],
    answer: 2,
  },
  {
    question: "–ì–¥–µ —á–∞—â–µ –≤—Å–µ–≥–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –∑–Ω–∞–∫ STOP?",
    options: [
      "–ù–∞ –∞–≤—Ç–æ–º–∞–≥–∏—Å—Ç—Ä–∞–ª—è—Ö",
      "–ù–∞ –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞—Ö —Å –ø–ª–æ—Ö–æ–π –≤–∏–¥–∏–º–æ—Å—Ç—å—é",
      "–ù–∞ –ø–ª–∞—Ç–Ω—ã—Ö –ø–∞—Ä–∫–æ–≤–∫–∞—Ö",
    ],
    answer: 1,
  },
];

export default function LearnStopPage() {
  const [quizAnswers, setQuizAnswers] = useState<(number | null)[]>(Array(quiz.length).fill(null));
  const allAnswered = quizAnswers.every((a) => a !== null);
  const allCorrect = quizAnswers.every((a, i) => a === quiz[i].answer);

  return (
    <div className="min-h-screen bg-[#f7f7f8] py-8">
      <div className="px-4 space-y-8">
        {/* –¢–µ–æ—Ä–∏—è */}
        <section className="bg-white rounded-2xl shadow p-6 flex flex-col gap-2 border-l-4 border-blue-400">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-2xl">üß†</span>
            <h2 className="text-xl font-bold">–¢–µ–æ—Ä–∏—è</h2>
          </div>
          <div className="text-lg font-semibold text-blue-900 mb-1">{theory.name}</div>
          <div className="text-sm text-gray-600 mb-1">–¢–∏–ø: <span className="font-medium text-gray-800">{theory.type}</span></div>
          <div className="text-sm text-gray-600 mb-1">–í–∏–¥: <span className="font-medium text-gray-800">{theory.view}</span></div>
          <div className="text-gray-800 mt-2">{theory.description}</div>
        </section>

        {/* –ü–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏ */}
        <section className="bg-yellow-50 rounded-2xl shadow p-6 border-l-4 border-yellow-400">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-2xl">‚ö†Ô∏è</span>
            <h2 className="text-xl font-bold text-yellow-800">–ü–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏</h2>
          </div>
          <ul className="list-disc pl-6 text-yellow-900 space-y-1">
            {pitfalls.map((p, i) => (
              <li key={i}>{p}</li>
            ))}
          </ul>
        </section>

        {/* –ì–¥–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è */}
        <section className="bg-white rounded-2xl shadow p-6 border-l-4 border-blue-300">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-2xl">üèôÔ∏è</span>
            <h2 className="text-xl font-bold text-blue-800">–ì–¥–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è</h2>
          </div>
          <ul className="list-disc pl-6 text-gray-800 space-y-1">
            {locations.map((l, i) => (
              <li key={i}>{l}</li>
            ))}
          </ul>
        </section>

        {/* –ß—Ç–æ –¥–æ–ª–∂–µ–Ω —Å–¥–µ–ª–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª—å */}
        <section className="bg-white rounded-2xl shadow p-6 border-l-4 border-green-400">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-2xl">üìå</span>
            <h2 className="text-xl font-bold text-green-800">–ß—Ç–æ –¥–æ–ª–∂–µ–Ω —Å–¥–µ–ª–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª—å</h2>
          </div>
          <ul className="list-disc pl-6 text-gray-800 space-y-1">
            {driverActions.map((a, i) => (
              <li key={i}>{a}</li>
            ))}
          </ul>
        </section>

        {/* –ú–∏–Ω–∏-—Ç–µ—Å—Ç */}
        <section className="bg-white rounded-2xl shadow p-6 border-l-4 border-purple-400">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-2xl">üß™</span>
            <h2 className="text-xl font-bold text-purple-800">–ú–∏–Ω–∏-—Ç–µ—Å—Ç</h2>
          </div>
          <div className="space-y-6">
            {quiz.map((q, i) => (
              <div key={i}>
                <div className="font-medium mb-2">{q.question}</div>
                <div className="flex flex-col gap-2">
                  {q.options.map((opt, j) => (
                    <label key={j} className={`rounded border px-4 py-2 cursor-pointer flex items-center gap-2 transition ${quizAnswers[i] === j ? 'border-purple-600 bg-purple-50' : 'border-gray-200 bg-white hover:bg-gray-50'}` }>
                      <input
                        type="radio"
                        name={`quiz${i}`}
                        checked={quizAnswers[i] === j}
                        onChange={() => setQuizAnswers(a => { const copy = [...a]; copy[i] = j; return copy; })}
                        className="accent-purple-600"
                      />
                      <span>{opt}</span>
                      {quizAnswers[i] !== null && j === q.answer && quizAnswers[i] === j && (
                        <span className="ml-2 text-green-600 font-bold">‚úî</span>
                      )}
                      {quizAnswers[i] !== null && quizAnswers[i] === j && j !== q.answer && (
                        <span className="ml-2 text-red-500 font-bold">‚úó</span>
                      )}
                    </label>
                  ))}
                </div>
              </div>
            ))}
          </div>
          <Button
            className="mt-8 w-full"
            disabled={!allAnswered}
            onClick={() => window.location.reload()}
          >
            –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–º—É
          </Button>
          {allAnswered && (
            <div className={`mt-4 text-center font-semibold ${allCorrect ? 'text-green-700' : 'text-red-600'}`}>{allCorrect ? '–í—Å–µ –æ—Ç–≤–µ—Ç—ã –≤–µ—Ä–Ω—ã! –û—Ç–ª–∏—á–Ω–æ!' : '–ï—Å—Ç—å –æ—à–∏–±–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.'}</div>
          )}
        </section>
      </div>
    </div>
  );
} 